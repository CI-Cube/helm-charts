apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}-cube-refresh-worker
  labels:
    {{- include "chart.labels" . | nindent 4 }}
{{- if .Values.annotations }}
  annotations: {{ toYaml .Values.annotations | nindent 4 }}
{{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.cubeRefreshWorker.replicas }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "chart.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: cube-refresh-worker
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/name: {{ include "chart.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: cube-refresh-worker
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: cubestore-pv
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-{{ .Chart.Name }}-cubestore-pvc
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.cubeRefreshWorker.image }}:{{ .Values.cubeRefreshWorker.tag }}"
          imagePullPolicy: {{ .Values.cubeRefreshWorker.pullPolicy }}
          volumeMounts:
            - mountPath: /cube/conf2
              name: cubestore-pv
          ports:
            - name: http
              containerPort: {{ .Values.cubeRefreshWorker.service.port }}
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: CUBEJS_DB_TYPE
              value: "postgres"
            - name: CUBEJS_DB_HOST
              value: {{ printf "%s-postgresql" .Release.Name | quote }}
            - name: CUBEJS_DB_NAME
              value: "halley"
            - name: CUBEJS_DB_USER
              value: "postgres"
            - name: CUBEJS_DB_PASS
              valueFrom:
                secretKeyRef:
                  key: postgresql-password
                  name: {{ .Release.Name }}-app-secrets
            - name: CUBEJS_DB_SSL
              value: "false"
            - name: CUBEJS_DEV_MODE
              value: "false"
            - name: CUBEJS_REFRESH_WORKER
              value: "true"
            - name: CUBEJS_LOG_LEVEL
              value: "trace"
            - name: CUBEJS_API_SECRET
              valueFrom:
                secretKeyRef:
                  key: jwt-secret
                  name: {{ .Release.Name }}-app-secrets
            - name: CUBEJS_CUBESTORE_HOST
              value: "{{ .Release.Name }}-cubejs-cubestore-router"
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
