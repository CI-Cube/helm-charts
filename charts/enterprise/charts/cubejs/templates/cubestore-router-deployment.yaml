apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "chart.fullname" . }}-cubestore-router
  labels:
    {{- include "chart.labels" . | nindent 4 }}
    app.kubernetes.io/component: cubestore-router
{{- if .Values.annotations }}
  annotations: {{ toYaml .Values.annotations | nindent 4 }}
{{- end }}
spec:
  serviceName: {{ include "chart.fullname" . }}-cubestore-router
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.cubestoreRouter.replicas }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "chart.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: cubestore-router
  template:
    metadata:
      labels:
        {{- include "chart.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: cubestore-router
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: cubestore-pv
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-{{ .Chart.Name }}-cubestore-pvc
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ .Values.cubestoreRouter.image | quote }}
          imagePullPolicy: {{ .Values.cubestoreRouter.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.cubestoreRouter.service.port }}
              protocol: TCP
            - name: http2
              containerPort: 3030
              protocol: TCP
            - name: mysql
              containerPort: 3306
              protocol: TCP
          command: ["/bin/sh","-c"]
          args: ["unset CUBESTORE_WORKER_PORT; ./cubestored"]
          env:
            - name: CUBESTORE_WORKERS
              value: {{ $count := .Values.cubestoreWorker.replicas | int }}{{- $networkAppPort  := .Values.cubestoreWorker.service.port -}}
              {{- range until $count }}{{ $.Release.Name }}-cubejs-cubestore-worker-{{  .  }}.{{ $.Release.Name }}-cubejs-cubestore-worker:{{ $networkAppPort }},{{- end }}
            - name: CUBESTORE_REMOTE_DIR
              value: "/cube/data"
            - name: CUBESTORE_META_PORT
              value: "9999"
            - name: CUBESTORE_SERVER_NAME
              value: "{{ .Release.Name }}-cubejs-cubestore-router:9999"
            - name: CUBEJS_LOG_LEVEL
              value: "trace"
          volumeMounts:
            - mountPath: /cube/data
              name: cubestore-pv
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
