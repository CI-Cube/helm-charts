{{- if .Values.cube.cubestore.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: cubestore-worker
  labels:
    app: {{ .Release.Name }}
spec:
  serviceName: cubestore-worker
  replicas: {{ .Values.cube.cubestore.worker.replicas }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
      cubejsApp: cubestoreWorker
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
        cubejsApp: cubestoreWorker
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: cubestore-pv
          persistentVolumeClaim:
            claimName: cubestore-pvc
      initContainers:
        - name: init-router
          image: busybox
          command: ['sh', '-c', 'until nc -vz cubestore-router:9999; do echo "Waiting for router"; sleep 2; done;']        
      containers:
        - name: cubestore-worker
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: CUBESTORE_WORKERS
            value: {{ $count := .Values.cube.cubestore.worker.replicas | int }}{{- $networkAppPort := .Values.cube.cubestore.worker.service.port -}}
            {{- range until $count }}cubestore-worker-{{  .  }}.cubestore-worker:{{ $networkAppPort }},
            {{- end }}
          envFrom:
          - configMapRef: 
              name: {{ .Values.cube.cubestore.worker.configmap.name }}
          volumeMounts:
            - mountPath: /cube/data
              name: cubestore-pv
          image: {{ .Values.cube.cubestore.worker.image }}
          imagePullPolicy: {{ .Values.cube.cubestore.worker.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.cube.cubestore.worker.service.port }}
              protocol: TCP
{{- end }}
