# Global configurations
global:
  # Image pull secrets for all deployments
  imagePullSecrets:
    - name: github

  # Database configurations
  database:
    type: "postgres"
    host: ""
    port: 5432
    name: ""
    user: ""
    password: ""
    sslMode: "require"

  # Redis configurations
  redis:
    host: ""
    port: 6379
    password: ""

  # Common configurations
  domain: "example.com"
  environment: "production"

# Component enablement
api:
  enabled: true
  image:
    repository: ghcr.io/ci-cube/cicube-api/api
    pullPolicy: IfNotPresent
  ingress:
    enabled: true
    annotations:
      cert-manager.io/issuer: "letsencrypt-prod"
    hosts:
      - host: "api.${global.domain}"
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls:
      - secretName: "api-tls"
        hosts:
          - "api.${global.domain}"

cubejs:
  enabled: true
  image:
    repository: ghcr.io/ci-cube/cicube-api/cube
    pullPolicy: IfNotPresent
  ingress:
    enabled: true
    annotations:
      cert-manager.io/issuer: "letsencrypt-prod"
    hosts:
      - host: "cube.${global.domain}"
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls:
      - secretName: "cube-tls"
        hosts:
          - "cube.${global.domain}"
  
  cubeApi:
    env:
      var:
        CUBEJS_DB_TYPE: "${global.database.type}"
        CUBEJS_DB_HOST: "${global.database.host}"
        CUBEJS_DB_NAME: "${global.database.name}"
        CUBEJS_DB_USER: "${global.database.user}"
        CUBEJS_DB_PASS: "${global.database.password}"
        CUBEJS_DB_SSL: "${global.database.sslMode}"
        CUBEJS_DEV_MODE: "false"
        CUBEJS_DEFAULT_API_SCOPES: "graphql,meta,data,jobs"
        CUBEJS_LOG_LEVEL: "trace"

  cubeRefreshWorker:
    env:
      var:
        CUBEJS_DB_TYPE: "${global.database.type}"
        CUBEJS_DB_HOST: "${global.database.host}"
        CUBEJS_DB_NAME: "${global.database.name}"
        CUBEJS_DB_USER: "${global.database.user}"
        CUBEJS_DB_PASS: "${global.database.password}"
        CUBEJS_DB_SSL: "${global.database.sslMode}"
        CUBEJS_DEV_MODE: "false"
        CUBEJS_REFRESH_WORKER: "true"
        CUBEJS_LOG_LEVEL: "trace"

# PostgreSQL configuration
postgresql:
  enabled: false  # Optional database
  auth:
    username: "${global.database.user}"
    password: "${global.database.password}"
    database: "${global.database.name}"
  primary:
    persistence:
      enabled: true
      size: 10Gi

# Redis configuration
redis:
  enabled: false  # Optional Redis
  architecture: standalone
  auth:
    enabled: true
    password: "${global.redis.password}"
  master:
    persistence:
      enabled: true
      size: 5Gi 
