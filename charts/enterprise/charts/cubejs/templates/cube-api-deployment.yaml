apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}-cube-api
  labels:
    app.kubernetes.io/name: {{ include "chart.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: cube-api
    {{- if .Chart.AppVersion }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
    {{- end }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  {{- with .Values.cubeApi.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.cubeApi.replicas | default 1 }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "chart.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: cube-api
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "chart.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: cube-api
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "chart.serviceAccountName" . }}
      {{- with .Values.cubeApi.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: cube-api
          {{- with .Values.cubeApi.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.cubeApi.image }}:{{ .Values.cubeApi.tag }}"
          imagePullPolicy: {{ .Values.cubeApi.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.cubeApi.service.port }}
              protocol: TCP
          {{- with .Values.cubeApi.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            - name: CUBEJS_DB_TYPE
              value: "postgres"
            - name: CUBEJS_DB_HOST
              value: {{ printf "%s-postgresql" .Release.Name | quote }}
            - name: CUBEJS_DB_NAME
              value: "halley"
            - name: CUBEJS_DB_USER
              value: "postgres"
            - name: CUBEJS_DB_PASS
              valueFrom:
                secretKeyRef:
                  key: postgresql-password
                  name: {{ .Release.Name }}-app-secrets
            - name: CUBEJS_DB_SSL
              value: "false"
            - name: CUBEJS_DEV_MODE
              value: "false"
            - name: CUBEJS_DEFAULT_API_SCOPES
              value: "graphql,meta,data,jobs"
            - name: CUBEJS_CUBESTORE_HOST
              value: "{{ .Release.Name }}-cubejs-cubestore-router"
            - name: CUBEJS_LOG_LEVEL
              value: "trace"
            - name: CUBEJS_API_SECRET
              valueFrom:
                secretKeyRef:
                  key: jwt-secret
                  name: {{ .Release.Name }}-app-secrets
            - name: CUBE_API_URL
              value: "http://{{ .Release.Name }}-cubejs-cube-api.{{ .Release.Namespace }}.svc.cluster.local:4000/cubejs-api/v1"
      {{- with .Values.cubeApi.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.cubeApi.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.cubeApi.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
