apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "chart.fullname" . }}-cubestore-router
  labels:
    app.kubernetes.io/name: {{ include "chart.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: cubestore-router
    {{- if .Chart.AppVersion }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
    {{- end }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  {{- with .Values.cubestoreRouter.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  serviceName: {{ include "chart.fullname" . }}-cubestore-router
  replicas: {{ .Values.cubestoreRouter.replicas | default 2 }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "chart.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: cubestore-router
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "chart.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: cubestore-router
    spec:
      serviceAccountName: {{ include "chart.serviceAccountName" . }}
      {{- with .Values.cubestoreRouter.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: cubestore-pv
          persistentVolumeClaim:
            claimName: {{ include "chart.fullname" . }}-cubestore-pvc
      containers:
        - name: cubestore-router
          env:
            - name: CUBESTORE_WORKERS
              value: |-
                {{- $fullname := include "chart.fullname" . -}}
                {{- $replicas := .Values.cubestoreWorker.replicas | default 2 | int -}}
                {{- $port := .Values.cubestoreWorker.service.port -}}
                {{- $workers := list -}}
                {{- range $i := until $replicas -}}
                  {{- $workers = append $workers (printf "%s-cubestore-worker-%d.%s-cubestore-worker:%d" $fullname $i $fullname $port) -}}
                {{- end -}}
                {{ join "," $workers }}
          envFrom:
            - configMapRef:
                name: {{ include "chart.fullname" . }}-{{ .Values.cubestoreRouter.configmap.name }}
          command: ["/bin/sh", "-c"]
          args: ["unset CUBESTORE_WORKER_PORT; ./cubestored"]
          volumeMounts:
            - mountPath: /cube/data
              name: cubestore-pv
          {{- with .Values.cubestoreRouter.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: {{ .Values.cubestoreRouter.image | quote }}
          imagePullPolicy: {{ .Values.cubestoreRouter.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.cubestoreRouter.service.port }}
              protocol: TCP
            - name: http2
              containerPort: 3030
              protocol: TCP 
            - name: mysql
              containerPort: 3306
              protocol: TCP   
          {{- with .Values.cubestoreRouter.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.cubestoreRouter.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.cubestoreRouter.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.cubestoreRouter.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
